================================================================================
COMMAND                                                      *java_util.command*

Java Util functions can be run through user commands. These can be quite useful
if you don't want to map everything to a keybind.

Every command is run through `JavaUtil {command}`

Example:
:JavaUtil lsp_rename



================================================================================
LSP                                                              *java_util.lsp*

The Java Util lsp module exposes a collection of functions that extend or
change the functionality of the standard java language server.

The behaviour of a lot of these functions are partly inspired by how IntelliJ
functions.

lsp.rename({new_name}, {opts})                        *java_util.lsp.rename()*
    Rename what you are currently hovering. If you are hovering a field and you
    are using lombok, it will also rename your getters and setters to the
    chosen new name.


    Parameters: ~
        {new_name} (string|nil)  If new_name is passed you will not be
                                 prompted for a new new_name
        {opts}     (table|nil)   options which will be passed to the
                                 |vim.lsp.buf.rename|

    Options: ~
        {filter} (function|nil)  Predicate to filter clients used for rename.
                                 Receives the attached clients as argument and
                                 must return a list of clients.
        {name}   (string|nil)    Restrict clients used for rename to ones
                                 where client.name matches this field.



 vim:tw=78:ts=8:ft=help:norl:
